{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useMemo, useCallback, createContext, useState, useContext } from 'react';\nimport { render } from '../../utils/render.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nvar LabelContext = /*#__PURE__*/createContext(null);\n\nfunction useLabelContext() {\n  var context = useContext(LabelContext);\n\n  if (context === null) {\n    var err = new Error('You used a <Label /> component, but it is not inside a relevant parent.');\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction useLabels() {\n  var _useState = useState([]),\n      labelIds = _useState[0],\n      setLabelIds = _useState[1];\n\n  return [// The actual id's as string or undefined.\n  labelIds.length > 0 ? labelIds.join(' ') : undefined, // The provider component\n  useMemo(function () {\n    return function LabelProvider(props) {\n      var register = useCallback(function (value) {\n        setLabelIds(function (existing) {\n          return [].concat(existing, [value]);\n        });\n        return function () {\n          return setLabelIds(function (existing) {\n            var clone = existing.slice();\n            var idx = clone.indexOf(value);\n            if (idx !== -1) clone.splice(idx, 1);\n            return clone;\n          });\n        };\n      }, []);\n      var contextBag = useMemo(function () {\n        return {\n          register: register,\n          slot: props.slot,\n          name: props.name,\n          props: props.props\n        };\n      }, [register, props.slot, props.name, props.props]);\n      return React.createElement(LabelContext.Provider, {\n        value: contextBag\n      }, props.children);\n    };\n  }, [setLabelIds])];\n} // ---\n\n\nvar DEFAULT_LABEL_TAG = 'label';\n\nfunction Label(props) {\n  var _props$passive = props.passive,\n      passive = _props$passive === void 0 ? false : _props$passive,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"passive\"]);\n\n  var context = useLabelContext();\n  var id = \"headlessui-label-\" + useId();\n  useIsoMorphicEffect(function () {\n    return context.register(id);\n  }, [id, context.register]);\n\n  var propsWeControl = _extends({}, context.props, {\n    id: id\n  });\n\n  var allProps = _extends({}, passThroughProps, propsWeControl); // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n\n\n  if (passive) delete allProps['onClick'];\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: context.name || 'Label'\n  });\n}\n\nexport { Label, useLabels };","map":{"version":3,"mappings":";;;;;AAyBA,IAAIA,YAAY,gBAAGC,aAAa,CAC9B,IAD8B,CAAhC;;AAIA,SAASC,eAAT;EACE,IAAIC,OAAO,GAAGC,UAAU,CAACJ,YAAD,CAAxB;;EACA,IAAIG,OAAO,KAAK,IAAhB,EAAsB;IACpB,IAAIE,GAAG,GAAG,IAAIC,KAAJ,CAAU,yEAAV,CAAV;IACA,IAAIA,KAAK,CAACC,iBAAV,EAA6BD,KAAK,CAACC,iBAAND,CAAwBD,GAAxBC,EAA6BJ,eAA7BI;IAC7B,MAAMD,GAAN;EACD;;EACD,OAAOF,OAAP;AACD;;SAMeK;kBACgBC,QAAQ,CAAW,EAAX;MAAjCC;MAAUC;;EAEf,OAAO;EAELD,QAAQ,CAACE,MAATF,GAAkB,CAAlBA,GAAsBA,QAAQ,CAACG,IAATH,CAAc,GAAdA,CAAtBA,GAA2CI,SAFtC;EAKLC,OAAO,CAAC;IACN,OAAO,SAASC,aAAT,CAAuBC,KAAvB;MACL,IAAIC,QAAQ,GAAGC,WAAW,CAAC,UAACC,KAAD;QACzBT,WAAW,CAAC,oBAAQ;UAAA,iBAAQU,QAAR,GAAkBD,KAAlB;QAAT,EAAXT;QAEA,OAAO;UAAA,OACLA,WAAW,CAAC,oBAAQ;YAClB,IAAIW,KAAK,GAAGD,QAAQ,CAACE,KAATF,EAAZ;YACA,IAAIG,GAAG,GAAGF,KAAK,CAACG,OAANH,CAAcF,KAAdE,CAAV;YACA,IAAIE,GAAG,KAAK,CAAC,CAAb,EAAgBF,KAAK,CAACI,MAANJ,CAAaE,GAAbF,EAAkB,CAAlBA;YAChB,OAAOA,KAAP;UAJS,EADN;QAAP;MAHwB,GAUvB,EAVuB,CAA1B;MAYA,IAAIK,UAAU,GAAGZ,OAAO,CACtB;QAAA,OAAO;UAAEG,QAAQ,EAARA,QAAF;UAAYU,IAAI,EAAEX,KAAK,CAACW,IAAxB;UAA8BC,IAAI,EAAEZ,KAAK,CAACY,IAA1C;UAAgDZ,KAAK,EAAEA,KAAK,CAACA;QAA7D,CAAP;MADsB,GAEtB,CAACC,QAAD,EAAWD,KAAK,CAACW,IAAjB,EAAuBX,KAAK,CAACY,IAA7B,EAAmCZ,KAAK,CAACA,KAAzC,CAFsB,CAAxB;MAKA,OAAOa,oBAAC9B,YAAY,CAAC+B,QAAdD;QAAuBV,KAAK,EAAEO;MAA9B,GAA2CV,KAAK,CAACe,QAAjDF,CAAP;IAlBF;EADK,GAqBJ,CAACnB,WAAD,CArBI,CALF,CAAP;AA4BD,C,CAAA;;;AAID,IAAIsB,iBAAiB,GAAG,OAAxB;;SAIgBC,MACdjB;uBAI+CA,MAAzCkB;MAAAA,sCAAU,KAAVA,GAAUC;MAAUC,iDAAqBpB,KAArBoB,EAAqBpB,WAArBoB;;EAC1B,IAAIlC,OAAO,GAAGD,eAAe,EAA7B;EACA,IAAIoC,EAAE,yBAAuBC,KAAK,EAAlC;EAEAC,mBAAmB,CAAC;IAAA,OAAMrC,OAAO,CAACe,QAARf,CAAiBmC,EAAjBnC,CAAN;EAAD,GAA6B,CAACmC,EAAD,EAAKnC,OAAO,CAACe,QAAb,CAA7B,CAAnBsB;;EAEA,IAAIC,cAAc,gBAAQtC,OAAO,CAACc,KAAhB;IAAuBqB,EAAE,EAAFA;EAAvB,EAAlB;;EAEA,IAAII,QAAQ,gBAAQL,gBAAR,EAA6BI,cAA7B,CAAZ,CAZAxB,CAYA;EAEA;;;EACA,IAAIkB,OAAJ,EAAa,OAAOO,QAAQ,CAAC,SAAD,CAAf;EAEb,OAAOC,MAAM,CAAC;IACZ1B,KAAK,EAAEyB,QADK;IAEZd,IAAI,EAAEzB,OAAO,CAACyB,IAARzB,IAAgB,EAFV;IAGZyC,UAAU,EAAEX,iBAHA;IAIZJ,IAAI,EAAE1B,OAAO,CAAC0B,IAAR1B,IAAgB;EAJV,CAAD,CAAb;AAMD","names":["LabelContext","createContext","useLabelContext","context","useContext","err","Error","captureStackTrace","useLabels","useState","labelIds","setLabelIds","length","join","undefined","useMemo","LabelProvider","props","register","useCallback","value","existing","clone","slice","idx","indexOf","splice","contextBag","slot","name","React","Provider","children","DEFAULT_LABEL_TAG","Label","passive","_props$passive","passThroughProps","id","useId","useIsoMorphicEffect","propsWeControl","allProps","render","defaultTag"],"sources":["../../../src/components/label/label.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet LabelContext = createContext<({ register(value: string): () => void } & SharedData) | null>(\n  null\n)\n\nfunction useLabelContext() {\n  let context = useContext(LabelContext)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a relevant parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\ninterface LabelProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useLabels(): [string | undefined, (props: LabelProviderProps) => JSX.Element] {\n  let [labelIds, setLabelIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined.\n    labelIds.length > 0 ? labelIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function LabelProvider(props: LabelProviderProps) {\n        let register = useCallback((value: string) => {\n          setLabelIds(existing => [...existing, value])\n\n          return () =>\n            setLabelIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return <LabelContext.Provider value={contextBag}>{props.children}</LabelContext.Provider>\n      }\n    }, [setLabelIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {}\ntype LabelPropsWeControl = 'id'\n\nexport function Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl> & {\n    passive?: boolean\n  }\n) {\n  let { passive = false, ...passThroughProps } = props\n  let context = useLabelContext()\n  let id = `headlessui-label-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let propsWeControl = { ...context.props, id }\n\n  let allProps = { ...passThroughProps, ...propsWeControl }\n  // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n  if (passive) delete allProps['onClick']\n\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: context.name || 'Label',\n  })\n}\n"]},"metadata":{},"sourceType":"module"}