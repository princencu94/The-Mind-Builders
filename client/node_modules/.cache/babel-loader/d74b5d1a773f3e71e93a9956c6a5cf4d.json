{"ast":null,"code":"import { extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, createForOfIteratorHelperLoose as _createForOfIteratorHelperLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { createContext, useCallback, useMemo, useEffect, useContext, useState, useRef, useReducer } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { forwardRefWithAs, render, Features as Features$1 } from '../../utils/render.esm.js';\nimport { useSyncRefs } from '../../hooks/use-sync-refs.esm.js';\nimport { Keys } from '../keyboard.esm.js';\nimport { isDisabledReactIssue7711 } from '../../utils/bugs.esm.js';\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { useWindowEvent } from '../../hooks/use-window-event.esm.js';\nimport { useFocusTrap, Features } from '../../hooks/use-focus-trap.esm.js';\nimport { useInertOthers } from '../../hooks/use-inert-others.esm.js';\nimport { ForcePortalRoot } from '../../internal/portal-force-root.esm.js';\nimport { Portal } from '../portal/portal.esm.js';\nimport { Description, useDescriptions } from '../description/description.esm.js';\nimport { useOpenClosed, State } from '../../internal/open-closed.esm.js';\nimport { StackProvider, StackMessage } from '../../internal/stack-context.esm.js';\n\nvar _reducers;\n\nvar DialogStates;\n\n(function (DialogStates) {\n  DialogStates[DialogStates[\"Open\"] = 0] = \"Open\";\n  DialogStates[DialogStates[\"Closed\"] = 1] = \"Closed\";\n})(DialogStates || (DialogStates = {}));\n\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"SetTitleId\"] = 0] = \"SetTitleId\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar reducers = (_reducers = {}, _reducers[ActionTypes.SetTitleId] = function (state, action) {\n  if (state.titleId === action.id) return state;\n  return _extends({}, state, {\n    titleId: action.id\n  });\n}, _reducers);\nvar DialogContext = /*#__PURE__*/createContext(null);\nDialogContext.displayName = 'DialogContext';\n\nfunction useDialogContext(component) {\n  var context = useContext(DialogContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Dialog.displayName + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction stateReducer(state, action) {\n  return match(action.type, reducers, state, action);\n} // ---\n\n\nvar DEFAULT_DIALOG_TAG = 'div';\nvar DialogRenderFeatures = Features$1.RenderStrategy | Features$1.Static;\nvar DialogRoot = /*#__PURE__*/forwardRefWithAs(function Dialog(props, ref) {\n  var open = props.open,\n      onClose = props.onClose,\n      initialFocus = props.initialFocus,\n      rest = _objectWithoutPropertiesLoose(props, [\"open\", \"onClose\", \"initialFocus\"]);\n\n  var _useState = useState(0),\n      nestedDialogCount = _useState[0],\n      setNestedDialogCount = _useState[1];\n\n  var usesOpenClosedState = useOpenClosed();\n\n  if (open === undefined && usesOpenClosedState !== null) {\n    var _match; // Update the `open` prop based on the open closed state\n\n\n    open = match(usesOpenClosedState, (_match = {}, _match[State.Open] = true, _match[State.Closed] = false, _match));\n  }\n\n  var containers = useRef(new Set());\n  var internalDialogRef = useRef(null);\n  var dialogRef = useSyncRefs(internalDialogRef, ref); // Validations\n\n  var hasOpen = props.hasOwnProperty('open') || usesOpenClosedState !== null;\n  var hasOnClose = props.hasOwnProperty('onClose');\n\n  if (!hasOpen && !hasOnClose) {\n    throw new Error(\"You have to provide an `open` and an `onClose` prop to the `Dialog` component.\");\n  }\n\n  if (!hasOpen) {\n    throw new Error(\"You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.\");\n  }\n\n  if (!hasOnClose) {\n    throw new Error(\"You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.\");\n  }\n\n  if (typeof open !== 'boolean') {\n    throw new Error(\"You provided an `open` prop to the `Dialog`, but the value is not a boolean. Received: \" + open);\n  }\n\n  if (typeof onClose !== 'function') {\n    throw new Error(\"You provided an `onClose` prop to the `Dialog`, but the value is not a function. Received: \" + onClose);\n  }\n\n  var dialogState = open ? DialogStates.Open : DialogStates.Closed;\n\n  var visible = function () {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open;\n    }\n\n    return dialogState === DialogStates.Open;\n  }();\n\n  var _useReducer = useReducer(stateReducer, {\n    titleId: null,\n    descriptionId: null\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var close = useCallback(function () {\n    return onClose(false);\n  }, [onClose]);\n  var setTitleId = useCallback(function (id) {\n    return dispatch({\n      type: ActionTypes.SetTitleId,\n      id: id\n    });\n  }, [dispatch]);\n  var ready = useServerHandoffComplete();\n  var enabled = ready && dialogState === DialogStates.Open;\n  var hasNestedDialogs = nestedDialogCount > 1; // 1 is the current dialog\n\n  var hasParentDialog = useContext(DialogContext) !== null; // If there are multiple dialogs, then you can be the root, the leaf or one\n  // in between. We only care abou whether you are the top most one or not.\n\n  var position = !hasNestedDialogs ? 'leaf' : 'parent';\n  useFocusTrap(internalDialogRef, enabled ? match(position, {\n    parent: Features.RestoreFocus,\n    leaf: Features.All\n  }) : Features.None, {\n    initialFocus: initialFocus,\n    containers: containers\n  });\n  useInertOthers(internalDialogRef, hasNestedDialogs ? enabled : false); // Handle outside click\n\n  useWindowEvent('mousedown', function (event) {\n    var _internalDialogRef$cu;\n\n    var target = event.target;\n    if (dialogState !== DialogStates.Open) return;\n    if (hasNestedDialogs) return;\n    if ((_internalDialogRef$cu = internalDialogRef.current) == null ? void 0 : _internalDialogRef$cu.contains(target)) return;\n    close();\n  }); // Handle `Escape` to close\n\n  useWindowEvent('keydown', function (event) {\n    if (event.key !== Keys.Escape) return;\n    if (dialogState !== DialogStates.Open) return;\n    if (hasNestedDialogs) return;\n    event.preventDefault();\n    event.stopPropagation();\n    close();\n  }); // Scroll lock\n\n  useEffect(function () {\n    if (dialogState !== DialogStates.Open) return;\n    if (hasParentDialog) return;\n    var overflow = document.documentElement.style.overflow;\n    var paddingRight = document.documentElement.style.paddingRight;\n    var scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n    document.documentElement.style.overflow = 'hidden';\n    document.documentElement.style.paddingRight = scrollbarWidth + \"px\";\n    return function () {\n      document.documentElement.style.overflow = overflow;\n      document.documentElement.style.paddingRight = paddingRight;\n    };\n  }, [dialogState, hasParentDialog]); // Trigger close when the FocusTrap gets hidden\n\n  useEffect(function () {\n    if (dialogState !== DialogStates.Open) return;\n    if (!internalDialogRef.current) return;\n    var observer = new IntersectionObserver(function (entries) {\n      for (var _iterator = _createForOfIteratorHelperLoose(entries), _step; !(_step = _iterator()).done;) {\n        var entry = _step.value;\n\n        if (entry.boundingClientRect.x === 0 && entry.boundingClientRect.y === 0 && entry.boundingClientRect.width === 0 && entry.boundingClientRect.height === 0) {\n          close();\n        }\n      }\n    });\n    observer.observe(internalDialogRef.current);\n    return function () {\n      return observer.disconnect();\n    };\n  }, [dialogState, internalDialogRef, close]);\n\n  var _useDescriptions = useDescriptions(),\n      describedby = _useDescriptions[0],\n      DescriptionProvider = _useDescriptions[1];\n\n  var id = \"headlessui-dialog-\" + useId();\n  var contextBag = useMemo(function () {\n    return [{\n      dialogState: dialogState,\n      close: close,\n      setTitleId: setTitleId\n    }, state];\n  }, [dialogState, state, close, setTitleId]);\n  var slot = useMemo(function () {\n    return {\n      open: dialogState === DialogStates.Open\n    };\n  }, [dialogState]);\n  var propsWeControl = {\n    ref: dialogRef,\n    id: id,\n    role: 'dialog',\n    'aria-modal': dialogState === DialogStates.Open ? true : undefined,\n    'aria-labelledby': state.titleId,\n    'aria-describedby': describedby,\n    onClick: function onClick(event) {\n      event.stopPropagation();\n    }\n  };\n  var passthroughProps = rest;\n  return React.createElement(StackProvider, {\n    type: \"Dialog\",\n    element: internalDialogRef,\n    onUpdate: useCallback(function (message, type, element) {\n      var _match2;\n\n      if (type !== 'Dialog') return;\n      match(message, (_match2 = {}, _match2[StackMessage.Add] = function () {\n        containers.current.add(element);\n        setNestedDialogCount(function (count) {\n          return count + 1;\n        });\n      }, _match2[StackMessage.Remove] = function () {\n        containers.current.add(element);\n        setNestedDialogCount(function (count) {\n          return count - 1;\n        });\n      }, _match2));\n    }, [])\n  }, React.createElement(ForcePortalRoot, {\n    force: true\n  }, React.createElement(Portal, null, React.createElement(DialogContext.Provider, {\n    value: contextBag\n  }, React.createElement(Portal.Group, {\n    target: internalDialogRef\n  }, React.createElement(ForcePortalRoot, {\n    force: false\n  }, React.createElement(DescriptionProvider, {\n    slot: slot,\n    name: \"Dialog.Description\"\n  }, render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_DIALOG_TAG,\n    features: DialogRenderFeatures,\n    visible: visible,\n    name: 'Dialog'\n  }))))))));\n}); // ---\n\nvar DEFAULT_OVERLAY_TAG = 'div';\nvar Overlay = /*#__PURE__*/forwardRefWithAs(function Overlay(props, ref) {\n  var _useDialogContext = useDialogContext([Dialog.displayName, Overlay.name].join('.')),\n      _useDialogContext$ = _useDialogContext[0],\n      dialogState = _useDialogContext$.dialogState,\n      close = _useDialogContext$.close;\n\n  var overlayRef = useSyncRefs(ref);\n  var id = \"headlessui-dialog-overlay-\" + useId();\n  var handleClick = useCallback(function (event) {\n    if (event.target !== event.currentTarget) return;\n    if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault();\n    event.preventDefault();\n    event.stopPropagation();\n    close();\n  }, [close]);\n  var slot = useMemo(function () {\n    return {\n      open: dialogState === DialogStates.Open\n    };\n  }, [dialogState]);\n  var propsWeControl = {\n    ref: overlayRef,\n    id: id,\n    'aria-hidden': true,\n    onClick: handleClick\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    name: 'Dialog.Overlay'\n  });\n}); // ---\n\nvar DEFAULT_TITLE_TAG = 'h2';\n\nfunction Title(props) {\n  var _useDialogContext2 = useDialogContext([Dialog.displayName, Title.name].join('.')),\n      _useDialogContext2$ = _useDialogContext2[0],\n      dialogState = _useDialogContext2$.dialogState,\n      setTitleId = _useDialogContext2$.setTitleId;\n\n  var id = \"headlessui-dialog-title-\" + useId();\n  useEffect(function () {\n    setTitleId(id);\n    return function () {\n      return setTitleId(null);\n    };\n  }, [id, setTitleId]);\n  var slot = useMemo(function () {\n    return {\n      open: dialogState === DialogStates.Open\n    };\n  }, [dialogState]);\n  var propsWeControl = {\n    id: id\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_TITLE_TAG,\n    name: 'Dialog.Title'\n  });\n} // ---\n\n\nvar Dialog = /*#__PURE__*/Object.assign(DialogRoot, {\n  Overlay: Overlay,\n  Title: Title,\n  Description: Description\n});\nexport { Dialog };","map":{"version":3,"mappings":"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","names":["DialogStates","ActionTypes","reducers","SetTitleId","state","action","titleId","id","DialogContext","createContext","displayName","useDialogContext","component","context","useContext","err","Error","Dialog","captureStackTrace","stateReducer","match","type","DEFAULT_DIALOG_TAG","DialogRenderFeatures","Features","RenderStrategy","Static","DialogRoot","forwardRefWithAs","props","ref","open","onClose","initialFocus","rest","useState","nestedDialogCount","setNestedDialogCount","usesOpenClosedState","useOpenClosed","undefined","State","Open","Closed","containers","useRef","Set","internalDialogRef","dialogRef","useSyncRefs","hasOpen","hasOwnProperty","hasOnClose","dialogState","visible","useReducer","descriptionId","dispatch","close","useCallback","setTitleId","ready","useServerHandoffComplete","enabled","hasNestedDialogs","hasParentDialog","position","useFocusTrap","parent","FocusTrapFeatures","RestoreFocus","leaf","All","None","useInertOthers","useWindowEvent","target","event","current","_internalDialogRef$cu","contains","key","Keys","Escape","preventDefault","stopPropagation","useEffect","overflow","document","documentElement","style","paddingRight","scrollbarWidth","window","innerWidth","clientWidth","observer","IntersectionObserver","entries","entry","boundingClientRect","x","y","width","height","observe","disconnect","useDescriptions","describedby","DescriptionProvider","useId","contextBag","useMemo","slot","propsWeControl","role","onClick","passthroughProps","React","StackProvider","element","onUpdate","message","StackMessage","Add","add","count","Remove","ForcePortalRoot","force","Portal","Provider","value","Group","name","render","defaultTag","features","DEFAULT_OVERLAY_TAG","Overlay","join","overlayRef","handleClick","currentTarget","isDisabledReactIssue7711","DEFAULT_TITLE_TAG","Title","Object","assign","Description"],"sources":["../../../src/components/dialog/dialog.tsx"],"sourcesContent":["// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n\n  // Types\n  ContextType,\n  ElementType,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap, Features as FocusTrapFeatures } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { Portal } from '../../components/portal/portal'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State } from '../../internal/open-closed'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\nimport { StackProvider, StackMessage } from '../../internal/stack-context'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  titleId: string | null\n}\n\nenum ActionTypes {\n  SetTitleId,\n}\n\ntype Actions = { type: ActionTypes.SetTitleId; id: string | null }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetTitleId](state, action) {\n    if (state.titleId === action.id) return state\n    return { ...state, titleId: action.id }\n  },\n}\n\nlet DialogContext = createContext<\n  | [\n      {\n        dialogState: DialogStates\n        close(): void\n        setTitleId(id: string | null): void\n      },\n      StateDefinition\n    ]\n  | null\n>(null)\nDialogContext.displayName = 'DialogContext'\n\nfunction useDialogContext(component: string) {\n  let context = useContext(DialogContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Dialog.displayName} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_DIALOG_TAG = 'div' as const\ninterface DialogRenderPropArg {\n  open: boolean\n}\ntype DialogPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'aria-modal'\n  | 'aria-describedby'\n  | 'aria-labelledby'\n  | 'onClick'\n\nlet DialogRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet DialogRoot = forwardRefWithAs(function Dialog<\n  TTag extends ElementType = typeof DEFAULT_DIALOG_TAG\n>(\n  props: Props<TTag, DialogRenderPropArg, DialogPropsWeControl> &\n    PropsForFeatures<typeof DialogRenderFeatures> & {\n      open?: boolean\n      onClose(value: boolean): void\n      initialFocus?: MutableRefObject<HTMLElement | null>\n    },\n  ref: Ref<HTMLDivElement>\n) {\n  let { open, onClose, initialFocus, ...rest } = props\n  let [nestedDialogCount, setNestedDialogCount] = useState(0)\n\n  let usesOpenClosedState = useOpenClosed()\n  if (open === undefined && usesOpenClosedState !== null) {\n    // Update the `open` prop based on the open closed state\n    open = match(usesOpenClosedState, {\n      [State.Open]: true,\n      [State.Closed]: false,\n    })\n  }\n\n  let containers = useRef<Set<MutableRefObject<HTMLElement | null>>>(new Set())\n  let internalDialogRef = useRef<HTMLDivElement | null>(null)\n  let dialogRef = useSyncRefs(internalDialogRef, ref)\n\n  // Validations\n  let hasOpen = props.hasOwnProperty('open') || usesOpenClosedState !== null\n  let hasOnClose = props.hasOwnProperty('onClose')\n  if (!hasOpen && !hasOnClose) {\n    throw new Error(\n      `You have to provide an \\`open\\` and an \\`onClose\\` prop to the \\`Dialog\\` component.`\n    )\n  }\n\n  if (!hasOpen) {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but forgot an \\`open\\` prop.`\n    )\n  }\n\n  if (!hasOnClose) {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but forgot an \\`onClose\\` prop.`\n    )\n  }\n\n  if (typeof open !== 'boolean') {\n    throw new Error(\n      `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${open}`\n    )\n  }\n\n  if (typeof onClose !== 'function') {\n    throw new Error(\n      `You provided an \\`onClose\\` prop to the \\`Dialog\\`, but the value is not a function. Received: ${onClose}`\n    )\n  }\n  let dialogState = open ? DialogStates.Open : DialogStates.Closed\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return dialogState === DialogStates.Open\n  })()\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    titleId: null,\n    descriptionId: null,\n  } as StateDefinition)\n\n  let close = useCallback(() => onClose(false), [onClose])\n\n  let setTitleId = useCallback(\n    (id: string | null) => dispatch({ type: ActionTypes.SetTitleId, id }),\n    [dispatch]\n  )\n\n  let ready = useServerHandoffComplete()\n  let enabled = ready && dialogState === DialogStates.Open\n  let hasNestedDialogs = nestedDialogCount > 1 // 1 is the current dialog\n  let hasParentDialog = useContext(DialogContext) !== null\n\n  // If there are multiple dialogs, then you can be the root, the leaf or one\n  // in between. We only care abou whether you are the top most one or not.\n  let position = !hasNestedDialogs ? 'leaf' : 'parent'\n\n  useFocusTrap(\n    internalDialogRef,\n    enabled\n      ? match(position, {\n          parent: FocusTrapFeatures.RestoreFocus,\n          leaf: FocusTrapFeatures.All,\n        })\n      : FocusTrapFeatures.None,\n    { initialFocus, containers }\n  )\n  useInertOthers(internalDialogRef, hasNestedDialogs ? enabled : false)\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (dialogState !== DialogStates.Open) return\n    if (hasNestedDialogs) return\n    if (internalDialogRef.current?.contains(target)) return\n\n    close()\n  })\n\n  // Handle `Escape` to close\n  useWindowEvent('keydown', event => {\n    if (event.key !== Keys.Escape) return\n    if (dialogState !== DialogStates.Open) return\n    if (hasNestedDialogs) return\n    event.preventDefault()\n    event.stopPropagation()\n    close()\n  })\n\n  // Scroll lock\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (hasParentDialog) return\n\n    let overflow = document.documentElement.style.overflow\n    let paddingRight = document.documentElement.style.paddingRight\n\n    let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n    document.documentElement.style.overflow = 'hidden'\n    document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n    return () => {\n      document.documentElement.style.overflow = overflow\n      document.documentElement.style.paddingRight = paddingRight\n    }\n  }, [dialogState, hasParentDialog])\n\n  // Trigger close when the FocusTrap gets hidden\n  useEffect(() => {\n    if (dialogState !== DialogStates.Open) return\n    if (!internalDialogRef.current) return\n\n    let observer = new IntersectionObserver(entries => {\n      for (let entry of entries) {\n        if (\n          entry.boundingClientRect.x === 0 &&\n          entry.boundingClientRect.y === 0 &&\n          entry.boundingClientRect.width === 0 &&\n          entry.boundingClientRect.height === 0\n        ) {\n          close()\n        }\n      }\n    })\n\n    observer.observe(internalDialogRef.current)\n\n    return () => observer.disconnect()\n  }, [dialogState, internalDialogRef, close])\n\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let id = `headlessui-dialog-${useId()}`\n\n  let contextBag = useMemo<ContextType<typeof DialogContext>>(\n    () => [{ dialogState, close, setTitleId }, state],\n    [dialogState, state, close, setTitleId]\n  )\n\n  let slot = useMemo<DialogRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n\n  let propsWeControl = {\n    ref: dialogRef,\n    id,\n    role: 'dialog',\n    'aria-modal': dialogState === DialogStates.Open ? true : undefined,\n    'aria-labelledby': state.titleId,\n    'aria-describedby': describedby,\n    onClick(event: ReactMouseEvent) {\n      event.stopPropagation()\n    },\n  }\n  let passthroughProps = rest\n\n  return (\n    <StackProvider\n      type=\"Dialog\"\n      element={internalDialogRef}\n      onUpdate={useCallback((message, type, element) => {\n        if (type !== 'Dialog') return\n\n        match(message, {\n          [StackMessage.Add]() {\n            containers.current.add(element)\n            setNestedDialogCount(count => count + 1)\n          },\n          [StackMessage.Remove]() {\n            containers.current.add(element)\n            setNestedDialogCount(count => count - 1)\n          },\n        })\n      }, [])}\n    >\n      <ForcePortalRoot force={true}>\n        <Portal>\n          <DialogContext.Provider value={contextBag}>\n            <Portal.Group target={internalDialogRef}>\n              <ForcePortalRoot force={false}>\n                <DescriptionProvider slot={slot} name=\"Dialog.Description\">\n                  {render({\n                    props: { ...passthroughProps, ...propsWeControl },\n                    slot,\n                    defaultTag: DEFAULT_DIALOG_TAG,\n                    features: DialogRenderFeatures,\n                    visible,\n                    name: 'Dialog',\n                  })}\n                </DescriptionProvider>\n              </ForcePortalRoot>\n            </Portal.Group>\n          </DialogContext.Provider>\n        </Portal>\n      </ForcePortalRoot>\n    </StackProvider>\n  )\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl>, ref: Ref<HTMLDivElement>) {\n  let [{ dialogState, close }] = useDialogContext([Dialog.displayName, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-dialog-overlay-${useId()}`\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (event.target !== event.currentTarget) return\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      event.stopPropagation()\n      close()\n    },\n    [close]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    name: 'Dialog.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_TITLE_TAG = 'h2' as const\ninterface TitleRenderPropArg {\n  open: boolean\n}\ntype TitlePropsWeControl = 'id'\n\nfunction Title<TTag extends ElementType = typeof DEFAULT_TITLE_TAG>(\n  props: Props<TTag, TitleRenderPropArg, TitlePropsWeControl>\n) {\n  let [{ dialogState, setTitleId }] = useDialogContext([Dialog.displayName, Title.name].join('.'))\n\n  let id = `headlessui-dialog-title-${useId()}`\n\n  useEffect(() => {\n    setTitleId(id)\n    return () => setTitleId(null)\n  }, [id, setTitleId])\n\n  let slot = useMemo<TitleRenderPropArg>(() => ({ open: dialogState === DialogStates.Open }), [\n    dialogState,\n  ])\n  let propsWeControl = { id }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TITLE_TAG,\n    name: 'Dialog.Title',\n  })\n}\n\n// ---\n\nexport let Dialog = Object.assign(DialogRoot, { Overlay, Title, Description })\n"]},"metadata":{},"sourceType":"module"}