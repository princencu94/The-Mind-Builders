{"ast":null,"code":"import { createForOfIteratorHelperLoose as _createForOfIteratorHelperLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nfunction disposables() {\n  var disposables = [];\n  var api = {\n    requestAnimationFrame: function (_requestAnimationFrame) {\n      function requestAnimationFrame() {\n        return _requestAnimationFrame.apply(this, arguments);\n      }\n\n      requestAnimationFrame.toString = function () {\n        return _requestAnimationFrame.toString();\n      };\n\n      return requestAnimationFrame;\n    }(function () {\n      var raf = requestAnimationFrame.apply(void 0, arguments);\n      api.add(function () {\n        return cancelAnimationFrame(raf);\n      });\n    }),\n    nextFrame: function nextFrame() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      api.requestAnimationFrame(function () {\n        api.requestAnimationFrame.apply(api, args);\n      });\n    },\n    setTimeout: function (_setTimeout) {\n      function setTimeout() {\n        return _setTimeout.apply(this, arguments);\n      }\n\n      setTimeout.toString = function () {\n        return _setTimeout.toString();\n      };\n\n      return setTimeout;\n    }(function () {\n      var timer = setTimeout.apply(void 0, arguments);\n      api.add(function () {\n        return clearTimeout(timer);\n      });\n    }),\n    add: function add(cb) {\n      disposables.push(cb);\n    },\n    dispose: function dispose() {\n      for (var _iterator = _createForOfIteratorHelperLoose(disposables.splice(0)), _step; !(_step = _iterator()).done;) {\n        var dispose = _step.value;\n        dispose();\n      }\n    }\n  };\n  return api;\n}\n\nexport { disposables };","map":{"version":3,"sources":["../../src/utils/disposables.ts"],"names":["disposables","api","requestAnimationFrame","raf","cancelAnimationFrame","nextFrame","args","setTimeout","timer","clearTimeout","add","dispose"],"mappings":";;SAAgBA,W,GAAAA;EACd,IAAIA,WAAW,GAAf,EAAA;EAEA,IAAIC,GAAG,GAAG;IACRC,qBADQ,EAAA,UAAA,sBAAA,EAAA;MAAA,SAAA,qBAAA,GAAA;QAAA,OAAA,sBAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;MAAA;;MAAA,qBAAA,CAAA,QAAA,GAAA,YAAA;QAAA,OAAA,sBAAA,CAAA,QAAA,EAAA;MAAA,CAAA;;MAAA,OAAA,qBAAA;IAAA,CAAA,CAAA,YAAA;MAEN,IAAIC,GAAG,GAAGD,qBAAqB,CAArBA,KAAAA,CAAAA,KAAAA,CAAAA,EAAV,SAAUA,CAAV;MACAD,GAAG,CAAHA,GAAAA,CAAQ,YAAA;QAAA,OAAMG,oBAAoB,CAA1B,GAA0B,CAA1B;MAARH,CAAAA;IAHM,CAAA,CAAA;IAMRI,SANQ,EAAA,SAAA,SAAA,GAAA;wCAMKC,IAAAA,GAAAA,IAAAA,KAAAA,CAAAA,IAAAA,C,EAAAA,IAAAA,GAAAA,C,EAAAA,IAAAA,GAAAA,I,EAAAA,IAAAA,E,EAAAA;QAAAA,IAAAA,CAAAA,IAAAA,CAAAA,GAAAA,SAAAA,CAAAA,IAAAA,CAAAA;;;MACXL,GAAG,CAAHA,qBAAAA,CAA0B,YAAA;QACxBA,GAAG,CAAHA,qBAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAAA,IAAAA;MADFA,CAAAA;IAPM,CAAA;IAYRM,UAZQ,EAAA,UAAA,WAAA,EAAA;MAAA,SAAA,UAAA,GAAA;QAAA,OAAA,WAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;MAAA;;MAAA,UAAA,CAAA,QAAA,GAAA,YAAA;QAAA,OAAA,WAAA,CAAA,QAAA,EAAA;MAAA,CAAA;;MAAA,OAAA,UAAA;IAAA,CAAA,CAAA,YAAA;MAaN,IAAIC,KAAK,GAAGD,UAAU,CAAVA,KAAAA,CAAAA,KAAAA,CAAAA,EAAZ,SAAYA,CAAZ;MACAN,GAAG,CAAHA,GAAAA,CAAQ,YAAA;QAAA,OAAMQ,YAAY,CAAlB,KAAkB,CAAlB;MAARR,CAAAA;IAdM,CAAA,CAAA;IAiBRS,GAjBQ,EAAA,SAAA,GAAA,CAAA,EAAA,EAAA;MAkBNV,WAAW,CAAXA,IAAAA,CAAAA,EAAAA;IAlBM,CAAA;IAqBRW,OArBQ,EAAA,SAAA,OAAA,GAAA;MAsBN,KAAA,IAAA,SAAA,GAAA,+BAAA,CAAoBX,WAAW,CAAXA,MAAAA,CAApB,CAAoBA,CAApB,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,EAAA,EAAA,IAAA,GAA2C;QAAA,IAAlCW,OAAkC,GAAA,KAAA,CAAA,KAAA;QACzCA,OAAO;MACR;IACF;EAzBO,CAAV;EA4BA,OAAA,GAAA;AACD","sourcesContent":["export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n"]},"metadata":{},"sourceType":"module"}