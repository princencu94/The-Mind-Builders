{"ast":null,"code":"import React, { useContext, createContext } from 'react';\nvar ForcePortalRootContext = /*#__PURE__*/createContext(false);\n\nfunction usePortalRoot() {\n  return useContext(ForcePortalRootContext);\n}\n\nfunction ForcePortalRoot(props) {\n  return React.createElement(ForcePortalRootContext.Provider, {\n    value: props.force\n  }, props.children);\n}\n\nexport { ForcePortalRoot, usePortalRoot };","map":{"version":3,"sources":["../../src/internal/portal-force-root.tsx"],"names":["ForcePortalRootContext","createContext","usePortalRoot","useContext","ForcePortalRoot","props","value","force"],"mappings":";AAQA,IAAIA,sBAAsB,GAAA,aAAGC,aAAa,CAA1C,KAA0C,CAA1C;;SAEgBC,a,GAAAA;EACd,OAAOC,UAAU,CAAjB,sBAAiB,CAAjB;AACD;;SAOeC,e,CAAgBC,K,EAAAA;EAC9B,OACE,KAAA,CAAA,aAAA,CAACL,sBAAsB,CAAvB,QAAA,EAAA;IAAiCM,KAAK,EAAED,KAAK,CAACE;EAA9C,CAAA,EACGF,KAAK,CAFV,QACE,CADF;AAKD","sourcesContent":["import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n} from 'react'\n\nlet ForcePortalRootContext = createContext(false)\n\nexport function usePortalRoot() {\n  return useContext(ForcePortalRootContext)\n}\n\ninterface ForcePortalRootProps {\n  force: boolean\n  children: ReactNode\n}\n\nexport function ForcePortalRoot(props: ForcePortalRootProps) {\n  return (\n    <ForcePortalRootContext.Provider value={props.force}>\n      {props.children}\n    </ForcePortalRootContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}