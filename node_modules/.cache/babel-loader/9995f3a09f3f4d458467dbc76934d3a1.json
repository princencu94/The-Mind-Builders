{"ast":null,"code":"import { useRef, useEffect } from 'react';\n\nfunction useWindowEvent(type, listener, options) {\n  var listenerRef = useRef(listener);\n  listenerRef.current = listener;\n  useEffect(function () {\n    function handler(event) {\n      listenerRef.current.call(window, event);\n    }\n\n    window.addEventListener(type, handler, options);\n    return function () {\n      return window.removeEventListener(type, handler, options);\n    };\n  }, [type, options]);\n}\n\nexport { useWindowEvent };","map":{"version":3,"mappings":";;SAEgBA,eACdC,MACAC,UACAC;EAEA,IAAIC,WAAW,GAAGC,MAAM,CAACH,QAAD,CAAxB;EACAE,WAAW,CAACE,OAAZF,GAAsBF,QAAtBE;EAEAG,SAAS,CAAC;IACR,SAASC,OAAT,CAAiBC,KAAjB;MACEL,WAAW,CAACE,OAAZF,CAAoBM,IAApBN,CAAyBO,MAAzBP,EAAiCK,KAAjCL;IACD;;IAEDO,MAAM,CAACC,gBAAPD,CAAwBV,IAAxBU,EAA8BH,OAA9BG,EAAuCR,OAAvCQ;IACA,OAAO;MAAA,OAAMA,MAAM,CAACE,mBAAPF,CAA2BV,IAA3BU,EAAiCH,OAAjCG,EAA0CR,OAA1CQ,CAAN;IAAP;EANO,GAON,CAACV,IAAD,EAAOE,OAAP,CAPM,CAATI;AAQD","names":["useWindowEvent","type","listener","options","listenerRef","useRef","current","useEffect","handler","event","call","window","addEventListener","removeEventListener"],"sources":["../../src/hooks/use-window-event.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  let listenerRef = useRef(listener)\n  listenerRef.current = listener\n\n  useEffect(() => {\n    function handler(event: WindowEventMap[TType]) {\n      listenerRef.current.call(window, event)\n    }\n\n    window.addEventListener(type, handler, options)\n    return () => window.removeEventListener(type, handler, options)\n  }, [type, options])\n}\n"]},"metadata":{},"sourceType":"module"}