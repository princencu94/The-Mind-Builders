{"ast":null,"code":"function match(value, lookup) {\n  if (value in lookup) {\n    var returnValue = lookup[value];\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return typeof returnValue === 'function' ? returnValue.apply(void 0, args) : returnValue;\n  }\n\n  var error = new Error(\"Tried to handle \\\"\" + value + \"\\\" but there is no handler defined. Only defined handlers are: \" + Object.keys(lookup).map(function (key) {\n    return \"\\\"\" + key + \"\\\"\";\n  }).join(', ') + \".\");\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match);\n  throw error;\n}\n\nexport { match };","map":{"version":3,"sources":["../../src/utils/match.ts"],"names":["match","value","lookup","args","returnValue","error","Error"],"mappings":"SAAgBA,K,CACdC,K,EACAC,M,EAAAA;EAGA,IAAID,KAAK,IAAT,MAAA,EAAqB;IACnB,IAAIG,WAAW,GAAGF,MAAM,CAAxB,KAAwB,CAAxB;;IADmB,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAFlBC,IAEkB,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAFlBA,IAEkB,CAAA,IAAA,GAAA,CAAA,CAFlBA,GAEkB,SAAA,CAAA,IAAA,CAFlBA;IAEkB;;IAEnB,OAAO,OAAA,WAAA,KAAA,UAAA,GAAoCC,WAAW,CAAXA,KAAAA,CAAAA,KAAAA,CAAAA,EAApC,IAAoCA,CAApC,GAAP,WAAA;EACD;;EAED,IAAIC,KAAK,GAAG,IAAA,KAAA,CAAA,uBAAA,KAAA,GAAA,iEAAA,GACgF,MAAM,CAAN,IAAA,CAAA,MAAA,EAAA,GAAA,CAGnF,UAAA,GAAA,EAAG;IAAA,OAAA,OAAA,GAAA,GAAA,IAAA;EAHgF,CAAA,EAAA,IAAA,CADhF,IACgF,CADhF,GAAZ,GAAY,CAAZ;EAOA,IAAIC,KAAK,CAAT,iBAAA,EAA6BA,KAAK,CAALA,iBAAAA,CAAAA,KAAAA,EAAAA,KAAAA;EAC7B,MAAA,KAAA;AACD","sourcesContent":["export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n"]},"metadata":{},"sourceType":"module"}